#!/bin/bash


# check number of arguments (default to 0), store the values
[ ${BASH_ARGC-0} -ne 2 ] && { echo "[usage] ./deploy.sh APP_NAME BUNDLE_FILE"; exit 1; }
APP_NAME=${BASH_ARGV[1]}
BUNDLE_FILE=${BASH_ARGV[0]}


# check if boo2docker is running
IP=`boot2docker ip`
[ -z "$IP" ] && { echo "boot2docker is not running, start it with: boot2docker start"; exit 1; }
HOST=`echo docker@${IP}`

# check if mongodb container is running
if [ -z "$(docker ps | awk '{print $1 $2}' | grep robodo/mongodb:latest | cut -c 1-3)" ]; then
  echo Container robodo/mongodb is not running start it up first.
  echo [create the container, or] docker run --name mongodb -d -p 127.0.0.1:27017:27017 -v /mnt/sda1/data/mongo/db:/data/db robodo/mongodb /usr/bin/mongod --smallfiles
  echo [run cached container] docker start mongodb
  exit;
  # docker stop $(docker ps | awk '{print $1 $2}' | grep test:latest | cut -c 1-3);
fi


# stop old container
if [ -n "$(docker ps | awk '{print $1 $2}' | grep test:latest | cut -c 1-3)" ]; then
  echo Container is already running, stopt it first
  docker stop $(docker ps | awk '{print $1 $2}' | grep ${APP_NAME}:latest | cut -c 1-3);
fi

# Setup boot2docker environment
$(boot2docker shellinit)
cat ~/.ssh/id_dsa.pub | ssh $HOST 'cat >> .ssh/authorized_keys'


# create Dockerfile template 
DOCKERFILE="
FROM node
MAINTAINER @robodo

# install meteor
RUN curl https://install.meteor.com | /bin/sh

ADD . ./meteorsrc
WORKDIR /meteorsrc

# extract archive
RUN tar -zxf bundle.tar.gz
RUN cd bundle/programs/server && npm install

# set meteor environment
# mongodb is the name of the mongodb container, we can link to this container from our meteor app container. 
# start mongodb container like this:
# $ docker run --name mongodb -d -p 127.0.0.1:27017:27017 -v /mnt/sda1/data/mongo/db:/data/db robodo/mongodb /usr/bin/mongod --smallfiles
ENV MONGO_URL mongodb://mongodb:27017
ENV ROOT_URL http://${IP}
ENV PORT 80
#ENV MAIL_URL='smtp://user:password@mailhost:port/'

# run the app
CMD node bundle/main.js
"

echo copy bundle to boot2docker: scp ${BUNDLE_FILE} ${HOST}:~/bundle.tar.gz
scp ${BUNDLE_FILE} ${HOST}:~/bundle.tar.gz
echo "${DOCKERFILE}" | ssh ${HOST} "cat - > Dockerfile"

echo build docker image with name ${APP_NAME} using Dockerfile
ssh ${HOST} sudo docker build -t ${APP_NAME} .

echo run docker image with name ${APP_NAME}
ssh ${HOST} sudo docker run -d -p 80:80  --link mongodb:mongodb ${APP_NAME} 